<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Hello, Web. on Jasblog</title>
    <link>https://jasbrg.github.io/</link>
    <description>Recent content in Hello, Web. on Jasblog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 28 Jan 2021 03:15:00 -0600</lastBuildDate>
    
	<atom:link href="https://jasbrg.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Largest product in a series</title>
      <link>https://jasbrg.github.io/euler/problem8/</link>
      <pubDate>Sat, 30 Jan 2021 10:23:00 -0600</pubDate>
      
      <guid>https://jasbrg.github.io/euler/problem8/</guid>
      <description>This one contains a chunk of data. This is an opportunity to test out org-babel references. If I put the following data into a named block I should be able to reference it in the code itself without duplicating it. Luckily when I was experimenting with org-babel before in order to write an interface to WolframAlpha I wrote the smallest possible babel interface, just resulting in the contents of src block.</description>
    </item>
    
    <item>
      <title>10001st prime</title>
      <link>https://jasbrg.github.io/euler/problem7/</link>
      <pubDate>Fri, 29 Jan 2021 21:16:00 -0600</pubDate>
      
      <guid>https://jasbrg.github.io/euler/problem7/</guid>
      <description> By listing the first six prime numbers: 2, 3, 5, 7, 11, and 13, we can see that the 6th prime is 13.
What is the 10 001st prime number?
 This one is also pretty straight-forward, with next-prime we just count up!
(defun nth-prime (n) (cl-loop with prime = 2 for i from 1 below n do (setq prime (next-prime prime)) finally return prime)) (nth-prime 10001) 104743  </description>
    </item>
    
    <item>
      <title>Sum square difference</title>
      <link>https://jasbrg.github.io/euler/problem6/</link>
      <pubDate>Fri, 29 Jan 2021 21:08:00 -0600</pubDate>
      
      <guid>https://jasbrg.github.io/euler/problem6/</guid>
      <description>The sum of the squares of the first ten natural numbers is,
1^2 + 2^2 + ... + 10^2 = 385
The square of the sum of the first ten natural numbers is,
(1 + 2 + ... + 10)^2 = 55^2 = 3025
Hence the difference between the sum of the squares of the first ten natural numbers and the square of the sum is 3025 - 385 = 2640.</description>
    </item>
    
    <item>
      <title>Smallest multiple</title>
      <link>https://jasbrg.github.io/euler/problem5/</link>
      <pubDate>Fri, 29 Jan 2021 20:27:00 -0600</pubDate>
      
      <guid>https://jasbrg.github.io/euler/problem5/</guid>
      <description>2520 is the smallest number that can be divided by each of the numbers from 1 to 10 without any remainder.
What is the smallest positive number that is evenly divisible by all of the numbers from 1 to 20?
 There&amp;rsquo;s more plumbing in the form of an abstract data-type which uses a modification of Largest prime factor to find all primes of a given numbers factors. Using this information we can construct a multiset,1 here the key is a prime, and the value is its power.</description>
    </item>
    
    <item>
      <title>Largest palindrome product</title>
      <link>https://jasbrg.github.io/euler/problem4/</link>
      <pubDate>Fri, 29 Jan 2021 12:10:00 -0600</pubDate>
      
      <guid>https://jasbrg.github.io/euler/problem4/</guid>
      <description>A palindromic number reads the same both ways. The largest palindrome made from the product of two 2-digit numbers is 9009 = 91 × 99.
Find the largest palindrome made from the product of two 3-digit numbers.
 Loops are powerful. The Loop Macro is a very good DSL.
;;; This is trivial (defun palindrome-intp (n) (let ((s (int-to-string n))) (string-equal s (string-reverse s)))) ;;; The best way to search the problem space isn&#39;t obvious to me.</description>
    </item>
    
    <item>
      <title>Largest prime factor</title>
      <link>https://jasbrg.github.io/euler/problem3/</link>
      <pubDate>Fri, 29 Jan 2021 10:31:00 -0600</pubDate>
      
      <guid>https://jasbrg.github.io/euler/problem3/</guid>
      <description>The prime factors of 13195 are 5, 7, 13 and 29.
What is the largest prime factor of the number 600851475143 ?
 I quickly realized a limitation of Elisp is its hacky early return from functions being based around catch and throw. It is idiomatic, but it sounds kind of ugly. We&amp;rsquo;re saved by the Loop Facility though, letting us write iterative programs, yay. It&amp;rsquo;s stateful, but whatever, the approach is sound.</description>
    </item>
    
    <item>
      <title>Even Fibonacci numbers</title>
      <link>https://jasbrg.github.io/euler/problem2/</link>
      <pubDate>Fri, 29 Jan 2021 09:47:00 -0600</pubDate>
      
      <guid>https://jasbrg.github.io/euler/problem2/</guid>
      <description>Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
1, 2, 3, 5, 8, 13, 21, 34, 55, 89, &amp;hellip;
By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
 This one is still straight-forward, I&amp;rsquo;m thankful for the parallel assignment macro from cl, saves from requiring a temporary variable reducing the complexity of the code.</description>
    </item>
    
    <item>
      <title>Multiples of 3 and 5</title>
      <link>https://jasbrg.github.io/euler/problem1/</link>
      <pubDate>Fri, 29 Jan 2021 08:13:00 -0600</pubDate>
      
      <guid>https://jasbrg.github.io/euler/problem1/</guid>
      <description>If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.
Find the sum of all the multiples of 3 or 5 below 1000.
 The first 100 problems of Project Euler are free for publishing, solutions can be freely discussed without offending the project runners.1 The first solution is little more than a reimplementation of the problem description in your chosen language.</description>
    </item>
    
    <item>
      <title>Hello</title>
      <link>https://jasbrg.github.io/post/hello/</link>
      <pubDate>Thu, 28 Jan 2021 15:56:00 -0600</pubDate>
      
      <guid>https://jasbrg.github.io/post/hello/</guid>
      <description>Coming to you from nearly-nine-hundred lines of Emacs-lisp and a pittance of CSS. Do you really need more? 1 In time I&amp;rsquo;ll accumulate more bits and pieces of customization and configuration to apply, better expressing myself through this site. As it stands now this little veneer suffices, it&amp;rsquo;s never really about what&amp;rsquo;s on the cover anyway, but how effective the cover is at appealing to those that may appreciate the content.</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://jasbrg.github.io/about/</link>
      <pubDate>Thu, 28 Jan 2021 14:52:00 -0600</pubDate>
      
      <guid>https://jasbrg.github.io/about/</guid>
      <description>Hello Reader,
The name&amp;rsquo;s Jacob. Before the catastrophe I studied theoretical computer science at the Vrije Universiteit van Amsterdam, and got a bachelor&amp;rsquo;s in computer science at the University of Wisconsin - Milwaukee before that.
In technology I like Emacs, Linux, programming language theory, and interfaces. Other intellectual interests are philosophy, logic, and when I&amp;rsquo;m feeling bold, theology.
I appreciate poetry, symbolic art, and folk music. The ideal piece in my opinion is challenging, inviting interpretation.</description>
    </item>
    
    <item>
      <title>Org-Spreadsheet</title>
      <link>https://jasbrg.github.io/post/org-spreadsheet/</link>
      <pubDate>Fri, 15 Jan 2021 18:53:00 -0600</pubDate>
      
      <guid>https://jasbrg.github.io/post/org-spreadsheet/</guid>
      <description>Intro This is getting pretty interesting. The spreadsheet functionality of org-tables is more impressive than I would have guessed. For small example here&amp;rsquo;s a snapshot of a diet.org file I&amp;rsquo;ve been working on.
* Food Lookup Table #+TBLNAME: nutrition | name | cal/g | fat%g | carb%g | prot%g | |----------------+-------+-------+--------+--------| | corn beef hash | 1.64 | 10 | 10 | 7 |  * Food Log #+TBLNAME: diet | timestamp | name | grams | cal/g | calories | |------------------------+----------------+-------+-------+----------| | [2021-01-15 Fri 13:35] | corn beef hash | 198 | 1.</description>
    </item>
    
  </channel>
</rss>